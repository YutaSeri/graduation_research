# Generated by Django 4.2 on 2023-08-01 09:13

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='phone_Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, verbose_name='名前')),
                ('gender', models.TextField(choices=[('男', '男'), ('女', '女'), ('未回答', '未回答')], verbose_name='性別')),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='年齢')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='メールアドレス')),
                ('password', models.CharField(max_length=128, unique=True, verbose_name='パスワード')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'phone_Account',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shelter_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Shelter',
            },
        ),
        migrations.CreateModel(
            name='p_support_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255, verbose_name='物資一覧')),
                ('quantity', models.IntegerField(verbose_name='個数')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='申請日')),
                ('arrival_date', models.DateTimeField(blank=True, null=True, verbose_name='到着予定日')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'p_support_Item',
            },
        ),
        migrations.AddField(
            model_name='phone_account',
            name='shelter',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='phone_account.shelter', verbose_name='避難所選択'),
        ),
        migrations.AddField(
            model_name='phone_account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
